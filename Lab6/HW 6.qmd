---
title: "HW 6"
author: "Yi-Hung Lee (PID: A16587141)"
format: pdf
---

> A. Can you improve this analysis code?

```{r}
df <- data.frame(a=1:10, b=seq(200,400,length=10),c=11:20,d=NA)
df$a <- (df$a - min(df$a)) / (max(df$a) - min(df$a))
df$b <- (df$b - min(df$a)) / (max(df$b) - min(df$b))
df$c <- (df$c - min(df$c)) / (max(df$c) - min(df$c))
df$d <- (df$d - min(df$d)) / (max(df$a) - min(df$d)) 

df$a
df$b
df$c
df$d
```

Improved code:
```{r}
analysis <- function(x) {
  (x - min(x)) / (max(x) - min(x))
}
```

Use the analysis function:
```{r}
analysis(df$a)
analysis(df$b)
analysis(df$c)
analysis(df$d)
```

> B. Can you improve this analysis code?

```{r}
library(bio3d)
s1 <- read.pdb("4AKE") # kinase with drug
s2 <- read.pdb("1AKE") # kinase no drug
s3 <- read.pdb("1E4Y") # kinase with drug
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s2.chainA <- trim.pdb(s2, chain="A", elety="CA")
s3.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
s2.b <- s2.chainA$atom$b
s3.b <- s3.chainA$atom$b
plotb3(s1.b, sse=s1.chainA,typ="l", ylab="Bfactor")
plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor")
plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")
```

> Q1. What type of object is returned from the read.pdb() function? 

read.pdb() function returns a large pdb file that describes a protein structure including atoms, xyz, helix, amino acid sequence, etc.

> Q2. What does the trim.pdb() function do?

Produce a new smaller PDB object, containing a subset of atoms, from a given larger PDB object.

> Q3. What input parameter would turn off the marginal black and grey rectangles in the plots and what do they represent in this case?

The marginal black and grey rectangles in the plots is controlled by sse parameter. sse parameter is the secondary structure object, in this case is the trim pdb.

> Q4. What would be a better plot to compare across the different proteins?

A better plot to compare across different proteins could be a bar chart across all amino acid residues.

> Q5. Which proteins are more similar to each other in their B-factor trends. How could you quantify this? 
HINT: try the rbind(), dist() and hclust() functions together with a resulting dendrogram plot. Look up the documentation to see what each of these functions does.

```{r}
hc <- hclust( dist( rbind(s1.b, s2.b, s3.b) ) )
plot(hc)
```

It shows that s1(4AKE) and s3(1AKE) are colser to each other than s2(1E4Y).

> Q6. How would you generalize the original code above to work with any set of input protein structures?

Improved code:
```{r}
library(bio3d)

plot_pdb <- function(x){
  s <- read.pdb(x)
  s.chainA <- trim.pdb(s, chain="A", elety="CA")
  s.b <- s.chainA$atom$b
  plotb3(s.b, sse=s1.chainA,typ="l", ylab="Bfactor")
} 
```

Run improved code:
```{r}
plot_pdb('4AKE')
plot_pdb('1AKE')
plot_pdb('1E4Y')
```

